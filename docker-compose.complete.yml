# üöÄ COMPLETE CLIENT DEMO SETUP
# Cross-Platform (Windows/Linux) Big Data Pipeline with PowerBI Integration

version: '3.8'

services:
  # =============================================================================
  # DATA INGESTION LAYER - Kafka Streaming
  # =============================================================================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - big-data-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - big-data-network

  # =============================================================================
  # DATA PROCESSING LAYER - Spark Cluster
  # =============================================================================
  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
      - "4040:4040"
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./scripts:/opt/bitnami/spark/scripts
      - ./powerbi_output:/opt/bitnami/spark/output
    networks:
      - big-data-network

  spark-worker1:
    image: bitnami/spark:3.5.0
    container_name: spark-worker1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    networks:
      - big-data-network

  spark-worker2:
    image: bitnami/spark:3.5.0
    container_name: spark-worker2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    networks:
      - big-data-network

  # =============================================================================
  # DATA STORAGE LAYER - Hadoop HDFS + Iceberg
  # =============================================================================
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=big-data-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - CORE_CONF_hadoop_http_staticuser_user=root
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
      - CORE_CONF_io_compression_codecs=org.apache.hadoop.io.compress.SnappyCodec
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - HDFS_CONF_dfs_permissions_enabled=false
      - HDFS_CONF_dfs_nameservices=mycluster
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data:/data
    networks:
      - big-data-network

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - CORE_CONF_hadoop_http_staticuser_user=root
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
      - CORE_CONF_io_compression_codecs=org.apache.hadoop.io.compress.SnappyCodec
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - HDFS_CONF_dfs_permissions_enabled=false
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    networks:
      - big-data-network

  # =============================================================================
  # DATABASE LAYER - PostgreSQL for PowerBI & Airflow
  # =============================================================================
  postgres-powerbi:
    image: postgres:13
    container_name: postgres-powerbi
    environment:
      POSTGRES_DB: powerbi_data
      POSTGRES_USER: powerbi_user
      POSTGRES_PASSWORD: powerbi_secure_2025
    ports:
      - "5432:5432"
    volumes:
      - postgres_powerbi_data:/var/lib/postgresql/data
      - ./data:/docker-entrypoint-initdb.d
    networks:
      - big-data-network

  postgres-airflow:
    image: postgres:13
    container_name: postgres-airflow
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow_secure_2025
    volumes:
      - postgres_airflow_data:/var/lib/postgresql/data
    networks:
      - big-data-network

  # =============================================================================
  # WORKFLOW ORCHESTRATION - Apache Airflow
  # =============================================================================
  airflow-webserver:
    image: apache/airflow:2.7.0
    container_name: airflow-webserver
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_secure_2025@postgres-airflow/airflow
      AIRFLOW__CORE__FERNET_KEY: 'YlCImzjge_TeZc4RWS9-1DB8a1tRZEKVMGhOGGWDK8k='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - airflow_logs:/opt/airflow/logs
    ports:
      - "8081:8080"
    command: webserver
    networks:
      - big-data-network

  airflow-scheduler:
    image: apache/airflow:2.7.0
    container_name: airflow-scheduler
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_secure_2025@postgres-airflow/airflow
      AIRFLOW__CORE__FERNET_KEY: 'YlCImzjge_TeZc4RWS9-1DB8a1tRZEKVMGhOGGWDK8k='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - airflow_logs:/opt/airflow/logs
    command: scheduler
    networks:
      - big-data-network

  # =============================================================================
  # BUSINESS INTELLIGENCE - PowerBI Service + Streamlit Dashboard
  # =============================================================================
  powerbi-service:
    build:
      context: .
      dockerfile: Dockerfile.powerbi
    container_name: powerbi-service
    depends_on:
      - postgres-powerbi
    environment:
      - POSTGRES_HOST=postgres-powerbi
      - POSTGRES_DB=powerbi_data
      - POSTGRES_USER=powerbi_user
      - POSTGRES_PASSWORD=powerbi_secure_2025
    ports:
      - "5000:5000"
    volumes:
      - ./powerbi_output:/app/output
      - ./data:/app/data
    networks:
      - big-data-network

  streamlit-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: streamlit-dashboard
    depends_on:
      - postgres-powerbi
      - spark-master
    environment:
      - POSTGRES_HOST=postgres-powerbi
      - POSTGRES_DB=powerbi_data
      - POSTGRES_USER=powerbi_user
      - POSTGRES_PASSWORD=powerbi_secure_2025
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8501:8501"
    volumes:
      - ./powerbi_output:/app/output
      - ./data:/app/data
    networks:
      - big-data-network

  # =============================================================================
  # MONITORING & MANAGEMENT
  # =============================================================================
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: big-data-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - big-data-network

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  postgres_powerbi_data:
  postgres_airflow_data:
  airflow_logs:

networks:
  big-data-network:
    driver: bridge

# =============================================================================
# CLIENT DEMO ACCESS POINTS:
# 
# üéØ DASHBOARDS & MONITORING:
# - Spark Cluster: http://localhost:8080
# - Streamlit Dashboard: http://localhost:8501  
# - PowerBI Service: http://localhost:5000
# - Airflow Pipeline: http://localhost:8081
# - Kafka Management: http://localhost:8082
# - Hadoop HDFS: http://localhost:9870
# 
# üìä DATA PROCESSING:
# - Kafka Streaming: localhost:9092
# - Spark Jobs: localhost:4040 (during execution)
# - PostgreSQL: localhost:5432
# - HDFS Storage: localhost:9000
# 
# üîê SECURITY IMPLEMENTED:
# - Encrypted database connections
# - Secure service authentication  
# - Network isolation
# - Access control
# =============================================================================
